version: '3.4'

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:-quay.io/api-platform/nginx}
      - ${PHP_IMAGE:-quay.io/api-platform/php}

x-network:
  - &test
    networks:
      - test

services:
  traefik-StreamingAppLiveMercure:
    image: traefik:latest
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/etc/traefik/traefik.toml
    <<: *test

  php-StreamingAppLiveMercure:
    build:
      context: ./api
      target: api_platform_php
      <<: *api-cache-from
    image: ${PHP_IMAGE:-quay.io/api-platform/php}
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      - db
    volumes:
      - ./api:/srv/api:rw,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./api/var:/srv/api/var:rw
      - dev-certs:/certs:ro,nocopy
    <<: *test

  api-StreamingAppLiveMercure:
    build:
      context: ./api
      target: api_platform_nginx
      <<: *api-cache-from
    image: ${NGINX_IMAGE:-quay.io/api-platform/nginx}
    depends_on:
      - php
    volumes:
      - ./api/public:/srv/api/public:ro
    expose:
      - 80
    labels:
      - traefik.http.routers.api.entrypoints=web
      - traefik.http.routers.api.rule=Host(`api.${DOMAIN}`)
    <<: *test

  vulcain-StreamingAppLiveMercure:
    image: dunglas/vulcain
    environment:
      - CERT_FILE=/certs/localhost.crt
      - KEY_FILE=/certs/localhost.key
      - UPSTREAM=http://api
    depends_on:
      - api
    ports:
      - target: 443
        published: 8443
        protocol: tcp
    labels:
      - traefik.http.routers.vulcain.rule=Host(`vulcain.${DOMAIN}`)
    <<: *test

  db-StreamingAppLiveMercure:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=!ChangeMe!
      - POSTGRES_USER=api-platform
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    <<: *test

  mercure-StreamingAppLiveMercure:
    image: dunglas/mercure
    environment:
      - ALLOW_ANONYMOUS=1
      - CERT_FILE=/certs/localhost.crt
      - CORS_ALLOWED_ORIGINS=*
      - DEMO=1
      - JWT_KEY=!ChangeMe!
      - KEY_FILE=/certs/localhost.key
      - PUBLISH_ALLOWED_ORIGINS=* # required for publishing from the demo page
    labels:
      - traefik.http.routers.mercure.rule=Host(`mercure.${DOMAIN}`)
      - traefik.http.routers.mercure.entrypoints=web,web-secure
      - traefik.http.routers.mercure.tls=true
    ports:
      - target: 443
        published: 1337
        protocol: tcp
    <<: *test

  admin-StreamingAppLiveMercure:
    build:
      context: ./admin
      target: api_platform_admin_development
      cache_from:
        - ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    image: ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    tty: true # https://github.com/facebook/create-react-app/issues/8688
    volumes:
      - ./admin:/usr/src/admin:rw,cached
    ports:
      - target: 3000
        published: 444
        protocol: tcp
    labels:
      - traefik.http.routers.admin.rule=Host(`admin.${DOMAIN}`)
      - traefik.http.services.admin.loadbalancer.server.port=3000
    <<: *test

volumes:
  db-data: {}

networks:
  test:
    external: true
